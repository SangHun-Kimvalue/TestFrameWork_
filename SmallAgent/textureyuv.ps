////////////////////////////////////////////////////////////////////////////////
// Filename: texture.ps
////////////////////////////////////////////////////////////////////////////////

/////////////
// GLOBALS //
/////////////
Texture2D shaderTextureY : register(t0);
Texture2D shaderTextureU : register(t1);
Texture2D shaderTextureV : register(t2);
//Texture2D shaderTexture;
SamplerState SampleType;

//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
	float4 position : SV_POSITION;
	float2 tex : TEXCOORD0;
};
//struct PixelInputType
//{
//    float4 position : SV_POSITION;
//    float2 tex : TEXCOORD0;			
//	float4 color : COLOR;
//	float2 index : TEXCOORD0;
//};

struct PixelOutputType
{
	float4 tex : TEXCOORD0;
};

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////

float4 YUV_Convert_RGB(PixelInputType input)
{
	//float Y = (shaderTextureY.Sample(SampleType, input.tex));
	//float U = shaderTextureU.Sample(SampleType, input.tex);
	//float V = shaderTextureV.Sample(SampleType, input.tex);

	//Y = 1.1643f * Y - 0.0625f;
	//U = U - 0.5f;
	//V = V - 0.5f;

	float Y = (1.1643f *shaderTextureY.Sample(SampleType, input.tex).r) - 0.0625f;
	float U = shaderTextureU.Sample(SampleType, input.tex).r - 0.5f;
	float V = shaderTextureV.Sample(SampleType, input.tex).r - 0.5f;

	float4	color;
	color.r = Y + 1.5958f * V;
	color.g = Y - 0.39173f * U - 0.81290f * V;
	color.b = Y + 2.017f * U;
	color.a = 1.0f;

	return color;
}

float4 TexturePixelShader(PixelInputType input) : SV_TARGET
{

	//float4 outputcolor  = YUV_Convert_RGB(input);

	return YUV_Convert_RGB(input);
}

//PixelOutputType TexturePixelShader(PixelInputType input) : SV_TARGET
//{
//	PixelOutputType Output;
//
//    // Sample the pixel color from the texture using the sampler at this texture coordinate location.
//	Output.tex		= shaderTexture.Sample(SampleType, input.tex);
//	//Output.color	= YUV_Convert_RGB(input.color);		
//	Output.color	= input.color;
//	
//	return Output;
//}